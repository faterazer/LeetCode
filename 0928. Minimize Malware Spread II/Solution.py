from collections import Counter
from typing import List


class Solution:
    def minMalwareSpread(self, graph: List[List[int]], initial: List[int]) -> int:
        n = len(graph)
        st = set(initial)
        visited = [False] * n
        cnt = Counter()

        def dfs(x: int) -> None:
            nonlocal size, node
            if x in st:
                node = x if node in (-1, x) else -2
                return

            visited[x] = True
            size += 1

            for y in range(n):
                if graph[x][y] and not visited[y]:
                    dfs(y)

        for i in range(n):
            if visited[i] or i in st:
                continue

            size, node = 0, -1
            dfs(i)
            if node >= 0:
                cnt[node] += size

        return min((-v, k) for k, v in cnt.items())[1] if cnt else min(initial)
