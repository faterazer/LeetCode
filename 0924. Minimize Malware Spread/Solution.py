from typing import List


class Solution:
    def minMalwareSpread(self, graph: List[List[int]], initial: List[int]) -> int:
        res, n = -1, len(graph)
        max_size = 0
        visited = [False] * n
        st = set(initial)

        def dfs(x: int) -> None:
            visited[x] = True
            nonlocal size, node
            size += 1
            if x in st and node != -2:
                node = x if node == -1 else -2
            for y in range(n):
                if graph[x][y] and not visited[y]:
                    dfs(y)

        for i in initial:
            if visited[i]:
                continue

            size, node = 0, -1
            dfs(i)
            if node >= 0 and (size > max_size or size == max_size and node < res):
                max_size, res = size, node
        return res if res >= 0 else min(initial)
